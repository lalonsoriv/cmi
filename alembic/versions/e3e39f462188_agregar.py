"""Agregar

Revision ID: e3e39f462188
Revises: 
Create Date: 2025-05-09 09:57:17.642772

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e3e39f462188'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('indicator_equipment')
    op.drop_table('indicators')
    op.drop_table('perspectives')
    op.drop_table('comparison_types')
    op.drop_table('aggregation_methods')
    op.drop_table('equipos_fisicos')
    op.drop_table('periodicities')
    op.drop_table('hierarchy_levels')
    op.drop_table('organizational_structures')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('indicators',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('indicators_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('perspective_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('unidad_medida', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('periodicidad', postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', 'ANNUAL', name='periodicity'), autoincrement=False, nullable=False),
    sa.Column('valor_real', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('referencias', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('tipo_comparacion', postgresql.ENUM('TYPE1', 'TYPE2', 'TYPE3', 'TYPE4', name='comparisontype'), autoincrement=False, nullable=False),
    sa.Column('metodo_agregacion', postgresql.ENUM('SUM', 'AVERAGE', 'WEIGHTING', name='aggregationmethod'), autoincrement=False, nullable=False),
    sa.Column('tiempo_dimension', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('ubicacion_geografica', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('estructura_jerarquica_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('centro_costo', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['estructura_jerarquica_id'], ['organizational_structures.id'], name='indicators_estructura_jerarquica_id_fkey'),
    sa.ForeignKeyConstraint(['parent_id'], ['indicators.id'], name='indicators_parent_id_fkey'),
    sa.ForeignKeyConstraint(['perspective_id'], ['perspectives.id'], name='indicators_perspective_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='indicators_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('organizational_structures',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('organizational_structures_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('level', postgresql.ENUM('OACE', 'OSDE', 'EMPRESA', 'MIPYME', 'FILIAL', 'UEB', 'GRUPO', name='organizationallevel'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['organizational_structures.id'], name='organizational_structures_parent_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='organizational_structures_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('hierarchy_levels',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('codigo', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('descripcion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nivel', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='hierarchy_levels_pkey'),
    sa.UniqueConstraint('codigo', name='hierarchy_levels_codigo_key')
    )
    op.create_table('periodicities',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('codigo', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('dias', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='periodicities_pkey'),
    sa.UniqueConstraint('codigo', name='periodicities_codigo_key')
    )
    op.create_table('equipos_fisicos',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('equipos_fisicos_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('coordenadas', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('estructura_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['estructura_id'], ['organizational_structures.id'], name='equipos_fisicos_estructura_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='equipos_fisicos_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('aggregation_methods',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('codigo', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('descripcion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='aggregation_methods_pkey'),
    sa.UniqueConstraint('codigo', name='aggregation_methods_codigo_key')
    )
    op.create_table('comparison_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('codigo', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('descripcion', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('formula_evaluacion', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='comparison_types_pkey'),
    sa.UniqueConstraint('codigo', name='comparison_types_codigo_key')
    )
    op.create_table('indicator_equipment',
    sa.Column('indicator_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('equipo_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['equipo_id'], ['equipos_fisicos.id'], name='indicator_equipment_equipo_id_fkey'),
    sa.ForeignKeyConstraint(['indicator_id'], ['indicators.id'], name='indicator_equipment_indicator_id_fkey'),
    sa.PrimaryKeyConstraint('indicator_id', 'equipo_id', name='indicator_equipment_pkey')
    )
    op.create_table('perspectives',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('descripcion', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='perspectives_pkey')
    )
    # ### end Alembic commands ###
